### Stock Management API Tests
### Base URL
@baseUrl = http://localhost:3000

### Variables
@contentType = application/json

#############################################
### USER API TESTS
#############################################

### Create a new user
POST {{baseUrl}}/users
Content-Type: {{contentType}}

{
  "name": "John Doe",
  "email": "john11@example.com",
  "password": "password123",
  "role": "user"
}

###

### Create another user (admin)
POST {{baseUrl}}/users
Content-Type: {{contentType}}

{
  "name": "Jane Smith",
  "email": "jane@example.com",
  "password": "admin123",
  "role": "admin"
}

###

### Get all users
GET {{baseUrl}}/users

###

### Get user by ID (replace with actual ID from previous response)
GET {{baseUrl}}/users/USER_ID_HERE

###

### Update user by ID (replace with actual ID)
PATCH {{baseUrl}}/users/USER_ID_HERE
Content-Type: {{contentType}}

{
  "name": "John Updated",
  "role": "admin"
}

###

### Delete user by ID (replace with actual ID)
DELETE {{baseUrl}}/users/USER_ID_HERE

#############################################
### STOCK API TESTS
#############################################

### Create a new stock
POST {{baseUrl}}/stocks
Content-Type: {{contentType}}

{
  "symbol": "AAPL",
  "name": "Apple Inc.",
  "price": 150.00,
  "quantity": 100,
  "description": "Technology stock",
  "category": "Technology"
}

###

### Create another stock
POST {{baseUrl}}/stocks
Content-Type: {{contentType}}

{
  "symbol": "GOOGL",
  "name": "Alphabet Inc.",
  "price": 2800.00,
  "quantity": 50,
  "description": "Search engine and cloud services",
  "category": "Technology"
}

###

### Create a third stock
POST {{baseUrl}}/stocks
Content-Type: {{contentType}}

{
  "symbol": "TSLA",
  "name": "Tesla Inc.",
  "price": 250.00,
  "quantity": 75,
  "description": "Electric vehicles and energy",
  "category": "Automotive"
}

###

### Get all stocks
GET {{baseUrl}}/stocks

###

### Get stock by ID (replace with actual ID from previous response)
GET {{baseUrl}}/stocks/STOCK_ID_HERE

###

### Update stock by ID (replace with actual ID)
PATCH {{baseUrl}}/stocks/STOCK_ID_HERE
Content-Type: {{contentType}}

{
  "price": 155.00,
  "quantity": 120,
  "description": "Updated technology stock price"
}

###

### Delete stock by ID (replace with actual ID)
DELETE {{baseUrl}}/stocks/STOCK_ID_HERE

#############################################
### ERROR TESTING
#############################################

### Test invalid user creation (missing required fields)
POST {{baseUrl}}/users
Content-Type: {{contentType}}

{
  "name": "Incomplete User"
}

###

### Test invalid stock creation (missing required fields)
POST {{baseUrl}}/stocks
Content-Type: {{contentType}}

{
  "symbol": "INVALID"
}

###

### Test getting non-existent user
GET {{baseUrl}}/users/507f1f77bcf86cd799439011

###

### Test getting non-existent stock
GET {{baseUrl}}/stocks/507f1f77bcf86cd799439011

#############################################
### EXTENDED STATUS API TESTS
#############################################

### Get system overview
GET {{baseUrl}}/status/extended/overview

###

### Get database health
GET {{baseUrl}}/status/extended/health/database

###

### Get external services health
GET {{baseUrl}}/status/extended/health/services

###

### Get security health
GET {{baseUrl}}/status/extended/health/security

###

### Get performance analytics
GET {{baseUrl}}/status/extended/analytics/performance

###

### Record a login attempt (successful)
POST {{baseUrl}}/status/extended/auth/login-attempt
Content-Type: {{contentType}}

{
  "endpoint": "/auth/login",
  "success": true
}

###

### Record a login attempt (failed)
POST {{baseUrl}}/status/extended/auth/login-attempt
Content-Type: {{contentType}}

{
  "endpoint": "/auth/login",
  "success": false,
  "reason": "Invalid password"
}

###

### Record external service ping
POST {{baseUrl}}/status/extended/external-service/ping
Content-Type: {{contentType}}

{
  "serviceName": "payment-gateway",
  "responseTime": 250,
  "success": true
}

###

### Record cache operation (hit)
POST {{baseUrl}}/status/extended/cache/operation
Content-Type: {{contentType}}

{
  "endpoint": "/users",
  "operation": "hit"
}

###

### Record cache operation (miss)
POST {{baseUrl}}/status/extended/cache/operation
Content-Type: {{contentType}}

{
  "endpoint": "/stocks",
  "operation": "miss"
}

###

### Record security event
POST {{baseUrl}}/status/extended/security/event
Content-Type: {{contentType}}

{
  "endpoint": "/users",
  "eventType": "suspicious",
  "details": {
    "ip": "192.168.1.100",
    "userAgent": "Bot/1.0",
    "reason": "Multiple rapid requests"
  }
}

###

### Record business transaction (successful)
POST {{baseUrl}}/status/extended/business/transaction
Content-Type: {{contentType}}

{
  "businessFunction": "stock_purchase",
  "success": true,
  "transactionTime": 1200,
  "revenue": 150.00
}

###

### Record business transaction (failed)
POST {{baseUrl}}/status/extended/business/transaction
Content-Type: {{contentType}}

{
  "businessFunction": "stock_purchase",
  "success": false,
  "transactionTime": 800,
  "failureReason": "Insufficient funds"
}

###

### Update database status
POST {{baseUrl}}/status/extended/database/mongodb-primary
Content-Type: {{contentType}}

{
  "method": "GET",
  "connectionCount": 15,
  "queryCount": 1250,
  "slowQueryCount": 3,
  "averageQueryTime": 45,
  "connectionStatus": "connected",
  "databaseVersion": "7.0.0"
}

###

### Update external service status
POST {{baseUrl}}/status/extended/external-service/payment-gateway
Content-Type: {{contentType}}

{
  "serviceUrl": "https://api.paymentgateway.com",
  "serviceVersion": "2.1.0",
  "serviceHealth": "healthy",
  "timeoutCount": 0,
  "retryCount": 2,
  "serviceMetrics": {
    "uptime": 99.9,
    "responseTime": 180,
    "errorRate": 0.1
  }
}

###

### Basic API Status Tests (Original)
GET {{baseUrl}}/status

###

### Get API logs
GET {{baseUrl}}/status/logs

###

### Get API logs with filters
GET {{baseUrl}}/status/logs?method=POST&status=200&limit=10